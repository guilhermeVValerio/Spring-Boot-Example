name: Build

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:8.9.7-community
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl -s http://localhost:9000/api/system/health | grep -oP '\"status\":\"\K[^\" ]+' | grep -q UP"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
          --memory=4g

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Wait for SonarQube to be healthy
        run: |
          echo "Waiting for SonarQube to start..."
          for i in {1..30}; do
            if curl -s http://localhost:9000/api/system/health | grep -q 'UP'; then
              echo "SonarQube is up and running!"
              break
            fi
            echo "Waiting for SonarQube to be healthy..."
            sleep 10
          done
      - name: List all containers
        run: docker ps -a
      - name: Get logs of all containers
        run: |
          for container in $(docker ps -a -q); do
            echo "Logs for container $container"
            docker logs $container
          done
      - name: Check system resources
        run: |
          echo "Memory usage:"
          free -h
          echo "CPU usage:"
          top -bn1 | grep "Cpu(s)"
      - name: Check Docker version
        run: docker version
      - name: Check Docker info
        run: docker info
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: http://localhost:9000
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Teste -Dsonar.projectName='Teste'
